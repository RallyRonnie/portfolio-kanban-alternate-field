<!DOCTYPE html>
<html>
<head>
    <title>Portfolio Kanban Using Alternate Field</title>
    <!--  (c) 2015 Rally Software Development Corp.  All Rights Reserved. -->
    <!--  Build Date: Thu Feb 07 2019 08:33:12 GMT-0600 (Central Standard Time) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Feb 07 2019 08:33:12 GMT-0600 (Central Standard Time)";
        var CHECKSUM = 37933075376;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>

    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.apps.kanban.Column",{extend:"Rally.ui.cardboard.Column",alias:"widget.kanbancolumn",config:{hideReleasedCards:!1},getStoreFilter:function(a){var b=[];return Ext.Array.push(b,this.callParent(arguments)),this.hideReleasedCards&&(b=b.and({property:"Release",value:null})),b}}),Ext.define("Rally.apps.kanban.ColumnCardFieldPicker",{extend:"Rally.ui.picker.FieldPicker",alias:"widget.kanbancolumncardfieldpicker",margin:0,config:{rightInitialText:"Apply to All",rightUpdateText:"Remove from All",rightCls:"rui-picker-right-action hyperlink"},initComponent:function(){this.addEvents("rightactionclick"),this.applyToAllFields=[],this.callParent(arguments)},onListItemDeselect:function(a,b,c){var d=this._getRightActionEl(a);if(d&&b.within(d)){var e=d.getHTML()===this.rightInitialText;if(this.fireEvent("rightactionclick",this,a,this.getValue(),e),e)return this.applyToAllFields.push(a.get(this.selectionKey)),this._selectRowCheckbox(a.get(this.recordKey)),d.update(this.rightUpdateText),!1;Ext.Array.remove(this.applyToAllFields,a.get(this.selectionKey)),d.update(this.rightInitialText)}else Ext.Array.remove(this.applyToAllFields,a.get(this.selectionKey));this.callParent(arguments)},getRightListHtml:function(a){var b="";if("Selected Fields"===a.groupSelected&&!Ext.Array.contains(this.alwaysSelectedValues,a[this.selectionKey])){var c=Ext.Array.contains(this.applyToAllFields,a[this.selectionKey])?this.rightUpdateText:this.rightInitialText;b='<div class="'+this.rightCls+'">'+c+"</div>"}return b},_getRightActionEl:function(a){var b=Ext.String.splitWords(this.rightCls).join(".");return this.list.getEl().down(".rui-multi-object-picker-option-id-"+a.get(this.recordKey)+" ."+b)}}),Ext.define("Rally.apps.kanban.ColumnSettingsField",{extend:"Ext.form.field.Base",alias:"widget.kanbancolumnsettingsfield",plugins:["rallyfieldvalidationui"],requires:["Rally.ui.combobox.ComboBox","Rally.ui.TextField","Rally.ui.combobox.FieldValueComboBox","Rally.ui.plugin.FieldValidationUi","Rally.apps.kanban.ColumnCardFieldPicker"],fieldSubTpl:'<div id="{id}" class="settings-grid"></div>',width:600,cls:"column-settings",config:{value:void 0,defaultCardFields:""},onDestroy:function(){this._grid&&(this._grid.destroy(),delete this._grid),this.callParent(arguments)},onRender:function(){this.callParent(arguments),this._store=Ext.create("Ext.data.Store",{fields:["column","shown","wip","portfolioStateMapping","portfolioStateName","cardFields","ref","type"],data:[]}),this._buildGrid()},_buildGrid:function(){this._grid&&this._grid.destroy(),this._grid=Ext.create("Rally.ui.grid.Grid",{autoWidth:!0,renderTo:this.inputEl,columnCfgs:this._getColumnCfgs(),showPagingToolbar:!1,showRowActionsColumn:!1,enableRanking:!1,store:this._store,height:225,scroll:"vertical",autoScroll:!0,editingConfig:{publishMessages:!1}}),this._grid.on("validateedit",function(a,b){return b&&b.column&&"portfolioStateMapping"===b.column.dataIndex&&(b.record.set("portfolioStateName",b&&b.editorRecord&&b.editorRecord.name||"-- No Mapping --"),!b.record.get("shown")&&b.editorRecord&&"-- No Mapping --"!==b.editorRecord.name&&b.record.set("shown",!0)),!0})},_getColumnCfgs:function(){var a=this.modelType,b=[{text:"Column",dataIndex:"column",emptyCellText:"None",flex:2},{text:"Show",dataIndex:"shown",flex:1,renderer:function(a){return a===!0?"Yes":"No"},editor:{xtype:"rallycombobox",displayField:"name",valueField:"value",editable:!1,storeType:"Ext.data.Store",storeConfig:{remoteFilter:!1,fields:["name","value"],data:[{name:"Yes",value:!0},{name:"No",value:!1}]}}},{text:"WIP",dataIndex:"wip",flex:1,emptyCellText:"&#8734;",editor:{xtype:"rallytextfield",maskRe:/[0-9]/,validator:function(a){return""===a||a>0&&9999>=a||"WIP must be > 0 and < 9999."},rawToValue:function(a){return""===a?a:parseInt(a,10)}}},{text:"ref",dataIndex:"ref",hidden:!0},{text:"type",dataIndex:"type",hidden:!0}];return"State"!==this.fieldName&&b.push({text:"Portfolio State Mapping",dataIndex:"portfolioStateMapping",emptyCellText:"--No Mapping--",editable:!1,flex:2,editor:this._getPortfolioStateEditorConfig(a),renderer:function(a,b,c){return c.get("portfolioStateName")||c.get("portfolioStateMapping")}}),this.shouldShowColumnLevelFieldPicker&&b.push({text:"Fields",dataIndex:"cardFields",width:300,tdCls:Rally.util.Test.toBrowserTestCssClass("cardfields",""),renderer:this._getRendererForCardFields,scope:this,editor:{xtype:"kanbancolumncardfieldpicker",cls:"card-fields",margin:0,modelTypes:["UserStory","Defect"],autoExpand:!0,alwaysExpanded:!1,hideTrigger:!0,fieldBlackList:["DisplayColor"],alwaysSelectedValues:["FormattedID","Name","Owner"],storeConfig:{autoLoad:!1},listeners:{selectionchange:function(a){a.validate()},rightactionclick:this._updateColumnCardFieldSettings,scope:this}}}),b},_getPortfolioStateEditorConfig:function(a){return{xtype:"rallyfieldvaluecombobox",model:Ext.identityFn(a),field:"State",disabled:!1,listeners:{ready:function(a){var b={};b[a.displayField]="-- No Mapping --",b[a.valueField]=null,a.store.insert(0,[b]),a.setValue(null)}}}},getSubmitData:function(){var a={};return a[this.name]=Ext.JSON.encode(this._buildSettingValue()),a},_getRendererForCardFields:function(a){var b=[];return Ext.Array.each(this._getCardFields(a),function(a){b.push(a.replace(/^c_/,""))}),b.join(", ")},_getCardFields:function(a){if(Ext.isString(a)&&a)return a.split(",");var b=["FormattedID","Name","Owner"];return Ext.Array.each(a,function(a){a&&a.data&&!Ext.Array.contains(b,a.data.name)&&b.push(a.data.name)}),b},_updateColumnCardFieldSettings:function(a,b,c,d){this._store.each(function(a){if(a.get("shown")){var c=this._getCardFields(a.get("cardFields"));d?Ext.Array.contains(c,b.get("name"))||c.push(b.get("name")):Ext.Array.remove(c,b.get("name")),a.set("cardFields",c.join(","))}},this),this._store.loadRawData(this._store.getRange())},_buildSettingValue:function(){var a={};return this._store.each(function(b){if(b.get("shown")&&(a[b.get("column")]={ref:b.get("ref"),type:b.get("type"),wip:b.get("wip"),portfolioStateMapping:b.get("portfolioStateMapping"),portfolioStateName:b.get("portfolioStateName")},this.shouldShowColumnLevelFieldPicker)){var c=this._getCardFields(b.get("cardFields"));a[b.get("column")].cardFields=c.join(",")}},this),a},getErrors:function(){var a=[];return this._storeLoaded&&!Ext.Object.getSize(this._buildSettingValue())&&a.push("At least one column must be shown."),a},setValue:function(a){this.callParent(arguments),this._value=a},_getColumnValue:function(a){var b=this._value;return b&&Ext.JSON.decode(b)[a]},refreshWithNewField:function(a){delete this._storeLoaded;var b=this.fieldName;this.fieldName=a&&a.name,this._refreshMappingEditor(this.modelType),a.getAllowedValueStore().load({callback:function(a,c,d){var e=Ext.Array.map(a,this._recordToGridRow,this);this._store.loadRawData(e),this.fireEvent("ready"),("State"===this.fieldName||"State"===b)&&this._buildGrid(),this._storeLoaded=!0},scope:this})},_refreshMappingEditor:function(a){this._grid&&this._grid.columns&&Ext.Array.each(this._grid.columns,function(b){return"portfolioStateMapping"===b.dataIndex?(b.setEditor(this._getPortfolioStateEditorConfig(a)),!1):void 0},this)},refreshWithNewModel:function(a){console.log("refreshWithNewModel",a,this.modelType),a!==this.modelType&&(console.log("refreshWithNewModel",a,this.modelType,this.fieldName),this._refreshMappingEditor(a),this.modelType=a,this._store.each(function(a){a.set("portfolioStateMapping",""),a.set("portfolioStateName",""),a.save()}))},_recordToGridRow:function(a){var b=a.get("StringValue"),c=0===this._store.getCount()?this._getColumnValue(b):null,d={column:b,ref:"null"!=a.get("_ref")?a.get("_ref"):null,type:a.get("_type"),shown:!1,wip:"",portfolioStateMapping:"",portfolioStateName:"",cardFields:this.defaultCardFields};return c&&(Ext.apply(d,{shown:!0,wip:c.wip,portfolioStateMapping:c.portfolioStateMapping,portfolioStateName:c.portfolioStateName}),c.cardFields&&Ext.apply(d,{cardFields:c.cardFields})),d}}),Ext.define("Rally.apps.common.RowSettingsField",{alias:"widget.rowsettingsfield",extend:"Ext.form.FieldContainer",requires:["Rally.ui.CheckboxField","Rally.ui.combobox.ComboBox","Rally.ui.plugin.FieldValidationUi","Rally.data.ModelFactory","Rally.data.wsapi.ModelBuilder"],mixins:{field:"Ext.form.field.Field"},layout:"hbox",cls:"row-settings",config:{value:void 0,isAllowedFieldFn:Ext.emptyFn,explicitFields:[],modelNames:["portfolioitem/feature"],whiteListFields:[]},initComponent:function(){this.callParent(arguments),this.mixins.field.initField.call(this),this.add([{xtype:"rallycheckboxfield",name:"showRows",boxLabel:"",margin:"0",submitValue:!1,value:this.getValue().showRows,listeners:{change:function(a,b){this.down("rallycombobox").setDisabled(!b)},scope:this}},{xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],name:"rowsField",margin:"0 6px",width:130,emptyText:"Choose Field...",displayField:"name",valueField:"value",disabled:"true"!==this.getValue().showRows,editable:!1,submitValue:!1,storeType:"Ext.data.Store",storeConfig:{remoteFilter:!1,fields:["name","value"],data:[]}}]),this._loadModels()},_loadModels:function(){Rally.data.ModelFactory.getModels({types:this.getModelNames(),context:this.context,success:this._onModelsRetrieved,scope:this})},_onModelsRetrieved:function(a){var b=_.uniq(Ext.Array.merge(this.explicitFields,this._getRowableFields(_.values(a))),"name"),c=this.down("rallycombobox");c.getStore().loadData(_.sortBy(b,"name")),c.setValue(this.getValue().rowsField),this.fireEvent("ready",this)},_getRowableFields:function(a){var b=Rally.data.wsapi.ModelBuilder.buildCompositeArtifact(a,this.context),c=b.getFields(),d=_.filter(c,function(c){var d=c.attributeDefinition;return d&&!d.Hidden&&d.Sortable&&(b.getModelsForField(c).length===a.length&&this.isAllowedFieldFn(c)||_.contains(this.whiteListFields,c.displayName))},this);return _.map(d,function(a){return{name:a.displayName,value:a.name}})},getSubmitData:function(){var a={},b=this.down("rallycheckboxfield"),c=this.down("rallycombobox"),d=b.getValue()&&!_.isEmpty(c.getValue());return a[b.name]=d,d&&(a[c.name]=c.getValue()),a},refreshWithNewModelType:function(a){this.setModelNames([a]),this._loadModels()}}),Ext.define("Rally.apps.kanban.Settings",{singleton:!0,requires:["Rally.apps.kanban.ColumnSettingsField","Rally.apps.common.RowSettingsField","Rally.ui.combobox.FieldComboBox","Rally.ui.CheckboxField","Rally.ui.plugin.FieldValidationUi"],getFields:function(a){var b=[{name:"modelType",xtype:"rallyportfolioitemtypecombobox",bubbleEvents:["modelselected"],fieldLabel:"Portfolio Item Type",valueField:"TypePath",listeners:{change:function(a){if(a.getRecord()&&a.getRecord().get("TypePath")){var b=a.getRecord().get("TypePath");this.fireEvent("modelselected",b)}}}},{name:"groupByField",xtype:"rallyfieldcombobox",model:Ext.identityFn(a.modelType),margin:"10px 0 0 0",fieldLabel:"Columns",listeners:{select:function(a){this.fireEvent("fieldselected",a.getRecord().get("fieldDefinition"))},ready:function(a){a.store.filterBy(function(a){var b=a.get("fieldDefinition").attributeDefinition;return b&&!b.ReadOnly&&b.Constrained&&"COLLECTION"!==b.AttributeType}),a.getRecord()&&this.fireEvent("fieldselected",a.getRecord().get("fieldDefinition"))}},handlesEvents:{select:function(a){if(a.getRecord()&&a.getRecord().get("TypePath")){var b=this.getValue();this.refreshWithNewModelType(a.getRecord().get("TypePath")),this.setValue(b)}},modelselected:function(a){var b=this.getValue();this.refreshWithNewModelType(a),this.setValue(b)}},bubbleEvents:["fieldselected","fieldready"]},{name:"columns",readyEvent:"ready",fieldLabel:"",margin:"5px 0 0 80px",xtype:"kanbancolumnsettingsfield",shouldShowColumnLevelFieldPicker:a.shouldShowColumnLevelFieldPicker,defaultCardFields:a.defaultCardFields,modelType:a.modelType,handlesEvents:{fieldselected:function(a){this.refreshWithNewField(a)},modelselected:function(a){console.log("modelselected",a),this.refreshWithNewModel(a)}},listeners:{ready:function(){this.fireEvent("columnsettingsready")}},bubbleEvents:"columnsettingsready"}];return b.push({name:"Label1",xtype:"label",text:'Enter a "," seperated list of userIDs (email) with no spaces. Add "none" to the list to include tasks with NO Owner.'}),b.push({name:"Owners",xtype:"textareafield",label:"Owner List",grow:!0,width:500,height:100}),b.push({name:"groupHorizontallyByField",xtype:"rowsettingsfield",fieldLabel:"Swimlanes",margin:"10 0 0 0",mapsToMultiplePreferenceKeys:["showRows","rowsField"],readyEvent:"ready",isAllowedFieldFn:function(a){var b=a.attributeDefinition;return console.log("field",a.name,b),(b.Custom&&(b.Constrained||"string"!==b.AttributeType.toLowerCase())||b.Constrained||"Parent"===a.name||_.contains(["boolean"],b.AttributeType.toLowerCase()))&&!_.contains(["web_link","text","date"],b.AttributeType.toLowerCase())},explicitFields:[{name:"Sizing",value:"PlanEstimate"}]}),b.push({name:"hideReleasedCards",xtype:"rallycheckboxfield",fieldLabel:"Options",margin:"10 0 0 0",boxLabel:"Hide cards in last visible column if assigned to a release"},{type:"cardage",config:{fieldLabel:"",margin:"5 0 10 80"}},{type:"query"}),b}}),Ext.define("Rally.technicalservices.InfoLink",{extend:"Ext.Component",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",renderTpl:"<div id='{id}-infolinkWrap' class='tsinfolink'>i</div>",initComponent:function(){this.callParent(arguments)},onRender:function(){this.callParent(arguments),this.mon(this.el,"click",this.onClick,this)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=this;Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){text=a.responseText,CHECKSUM&&CHECKSUM!==b._generateChecksum(text)&&(console.log("Checksums don't match!"),b.dialog&&b.dialog.add({xtype:"container",html:"Checksums do not match"}))}})},onClick:function(a){var b=this;this._checkChecksum(this);var c=[];this.informationHtml&&c.push({xtype:"container",html:this.informationHtml}),c.push({xtype:"container",html:"This app was created by the Rally Technical Services Team."}),APP_BUILD_DATE&&c.push({xtype:"container",html:"Build date/time: "+APP_BUILD_DATE}),this.dialog&&this.dialog.destroy(),this.dialog=Ext.create("Rally.ui.dialog.Dialog",{defaults:{padding:5,margin:5},closable:!0,draggable:!0,title:b.title,items:c}),this.dialog.show()}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.override(Rally.ui.AddNew,{_getFieldConfigs:function(){var a=this.fieldLabel,b=[{itemId:"label",xtype:"label",text:a}];if(this._showRecordTypes()){var c=_.map(this.recordTypes,function(a){return{type:a,displayName:a}},this),d=Ext.merge({itemId:"type",xtype:"rallycombobox",flex:1,minWidth:50,maxWidth:100,matchFieldWidth:!0,store:{fields:["type","displayName"],data:c},listeners:{change:this._onRecordTypeChanged,scope:this},valueField:"type",displayField:"displayName",value:this.recordTypes[0],queryMode:"local",editable:!1},this.comboCfg||{});b.push(d)}return this.showNameField&&b.push({itemId:"nameField",xtype:"rallytextfield",plugins:["rallyfieldvalidationui"],emptyText:"Name",flex:1,minWidth:100,maxWidth:300,enableKeyEvents:!0,listeners:{specialKey:this._onTextFieldSpecialKey,keyup:this.toggleAddButton,scope:this}}),b}}),Ext.override(Rally.ui.cardboard.plugin.CardAge,{_addField:function(){var a=this,b=a.cmp;this.cmp.addField({name:b.ageFieldName,renderTpl:function(){var c=a._getAge();return c>=b.showAge?['<div class="',[b.ageFieldName,"timeInState"].join(" "),'">',"<span>",c.toString()," ",Ext.util.Inflector.pluralize(b.ageIntervalUnit)," in this column</span>","</div>"].join(""):""},isStatus:!0,hasValue:function(){var a=b.getRecord();return void 0!==a.raw[b.ageFieldName]||a.get(b.ageFieldName)}})}}),Ext.override(Rally.ui.cardboard.CardBoard,{_createRow:function(a,b){var c=!1;if(this.rowConfig&&this.rowConfig.field&&this.state&&this.state.collapsedRows){var d=this._getRowKey(this.rowConfig.field,a.value);c=this.state.collapsedRows.hasOwnProperty(d)}var e={el:this.getEl().down("tbody.columns"),columns:this.columnDefinitions,context:this.getAppContextOrEnvironmentContext(),fieldDef:this.rowConfig&&this.rowConfig.fieldDef,collapsed:c};this.rowConfig&&(this.rowConfig.headerConfig&&(e.headerConfig=this.rowConfig.headerConfig),this.rowConfig.sortField&&(e.sortField=this.rowConfig.sortField));var f=Ext.create("Rally.ui.cardboard.row.Row",Ext.apply(e,a)),g=b?this._getSortedIndex(f):this.rowDefinitions.length;return this.rowDefinitions.splice(g,0,f),f.insert(this.rowDefinitions[g+1]),f.isCollapsible()&&(f.on("collapse",this.saveState,this),f.on("expand",this.saveState,this)),f},_onColumnReady:function(a,b){this._columnsLoaded=this._columnsLoaded||0,this._columnsLoaded++,this.fireEvent("columnready",a,this),this._columnsLoaded===this.columnDefinitions.length&&(this._onAllColumnsReady(),this.getRows().length||(this.rowConfig?this._createRow({showHeader:!0,value:null,isBlankSlate:!0}):this._createDefaultRow()))}}),Ext.override(Rally.ui.cardboard.Column,{getStoreFilter:function(){var a={property:this.attribute,operator:"=",value:this.getValue()||""};return a},isMatchingRecord:function(a){var b=a.get(this.attribute),c=a.getField(this.attribute),d=a.self.typePath,e=this.store.models||Ext.Array.from(this.store.model),f=_.pluck(e,"typePath");if(!c||!_.contains(f,d))return!1;var g=this.getValue();return Ext.isFunction(c.convert)&&(g=c.convert(g,a)),g===b||Rally.util.Ref.isRefUri(g)&&Rally.util.Ref.getRelativeUri(b)===Rally.util.Ref.getRelativeUri(g)||!g&&"None"===b}}),Ext.define("TSPortfolioKanbanAlternateFieldApp",{extend:"Rally.app.App",requires:["Rally.apps.kanban.Settings","Rally.apps.kanban.Column","Rally.ui.gridboard.GridBoard","Rally.ui.gridboard.plugin.GridBoardAddNew","Rally.ui.gridboard.plugin.BoardPolicyDisplayable","Rally.ui.cardboard.plugin.ColumnPolicy","Rally.ui.cardboard.PolicyContainer","Rally.ui.cardboard.CardBoard","Rally.ui.cardboard.plugin.Scrollable","Rally.ui.report.StandardReport","Rally.clientmetrics.ClientMetricsRecordable","Rally.ui.gridboard.plugin.GridBoardCustomFilterControl","Rally.ui.gridboard.plugin.GridBoardFieldPicker","Rally.ui.gridboard.plugin.GridBoardSharedViewControl","Rally.ui.cardboard.plugin.FixedHeader"],mixins:["Rally.clientmetrics.ClientMetricsRecordable"],cls:"kanban",logger:new Rally.technicalservices.Logger,appName:"Kanban",settingsScope:"project",autoScroll:!1,config:{defaultSettings:{groupByField:"InvestmentCategory",showRows:!1,columns:Ext.JSON.encode({None:{wip:""}}),cardFields:"FormattedID,Name,Owner,Discussion",hideReleasedCards:!1,showCardAge:!0,cardAgeThreshold:3,pageSize:25,modelType:null}},launch:function(){var a=this.getSetting("modelType");return a?void Rally.data.ModelFactory.getModel({type:a,success:this._onModelRetrieved,scope:this}):void this.add({xtype:"container",html:'<div class="no-data-container">Please set up the configuration settings in the board.<div class="secondary-message">'})},getOptions:function(){return[{text:"Print",handler:this._print,scope:this}]},getSettingsFields:function(){return Rally.apps.kanban.Settings.getFields({shouldShowColumnLevelFieldPicker:this._shouldShowColumnLevelFieldPicker(),defaultCardFields:this.getSetting("cardFields"),modelType:this.getSetting("modelType")})},onTimeboxScopeChange:function(a){this.callParent(arguments),this.gridboard.destroy(),this.launch()},_shouldShowColumnLevelFieldPicker:function(){return this.getContext().isFeatureEnabled("COLUMN_LEVEL_FIELD_PICKER_ON_KANBAN_SETTINGS")},_onModelRetrieved:function(a){this.logger.log("_onModelRetrieved",a),this.groupByField=a.getField(this.getSetting("groupByField")),this._addCardboardContent()},_addCardboardContent:function(){this.logger.log("_addCardboardContent"),this.gridboard&&this.gridboard.destroy();var a=this._getCardboardConfig(),b=this._getColumnSetting();b&&(a.columns=this._getColumnConfig(b)),this.logger.log("config:",this._getGridboardConfig(a)),this.rendered?this.gridboard=this.add(this._getGridboardConfig(a)):this.on("render",function(){this.gridboard=this.add(this._getGridboardConfig(a))},this)},_getGridboardConfig:function(a){var b=this.getContext(),c=this._getDefaultTypes(),d=["Successors","Predecessors","DisplayColor"],e=this.getHeight&&this.getHeight(),f=c[0].replace("PortfolioItem/","");return this.logger.log("_getGridboardConfig",e),{xtype:"rallygridboard",stateful:!1,toggleState:"board",cardBoardConfig:a,plugins:[{ptype:"rallygridboardaddnew",addNewControlConfig:{fieldLabel:"New "+f,listeners:{beforecreate:this._onBeforeCreate,beforeeditorshow:this._onBeforeEditorShow,scope:this},stateful:!0,stateId:b.getScopedStateId("kanban-add-new")}},{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:b.getScopedStateId("kanban-filter"),modelNames:c,margin:"3 9 3 30",inlineFilterPanelConfig:{collapsed:!1,quickFilterPanelConfig:{defaultFields:["Owner"],addQuickFilterConfig:{whiteListFields:["Milestones"]}}}}},{ptype:"rallygridboardfieldpicker",headerPosition:"left",boardFieldBlackList:d,modelNames:c,boardFieldDefaults:this.getSetting("cardFields").split(",")},{ptype:"rallyboardpolicydisplayable",prefKey:"kanbanAgreementsChecked",checkboxConfig:{boxLabel:"Show Agreements"}}],context:b,modelNames:c,storeConfig:{filters:this._getFilters()},height:e}},_hasViewSelected:function(){var a=this.getSharedViewConfig().sharedViewConfig;if(a&&a.stateId){var b=(Ext.state.Manager.get(a.stateId)||{}).value;return!_.isEmpty(b)}return!1},_getColumnConfig:function(a){var b=[];return Ext.Object.each(a,function(a,c){var d={xtype:"kanbancolumn",enableWipLimit:!0,wipLimit:c.wip,plugins:[{ptype:"rallycolumnpolicy",app:this}],value:"state"==c.type||""==a?c.ref:a,columnHeaderConfig:{headerTpl:a||"None"},listeners:{invalidfilter:{fn:this._onInvalidFilter,scope:this}}};this._shouldShowColumnLevelFieldPicker()&&(d.fields=this._getFieldsForColumn(c)),b.push(d)},this),b[b.length-1].hideReleasedCards=this.getSetting("hideReleasedCards"),b},_getFieldsForColumn:function(a){var b=[];return this._shouldShowColumnLevelFieldPicker()&&(a.cardFields?b=a.cardFields.split(","):this.getSetting("cardFields")&&(b=this.getSetting("cardFields").split(","))),b},_onInvalidFilter:function(){Rally.ui.notify.Notifier.showError({message:"Invalid query: "+this.getSetting("query")})},_getCardboardConfig:function(){var a={xtype:"rallycardboard",plugins:[{ptype:"rallycardboardprinting",pluginId:"print"},{ptype:"rallyscrollablecardboard",containerEl:this.getEl()},{ptype:"rallyfixedheadercardboard"}],types:this._getDefaultTypes(),attribute:this.getSetting("groupByField"),margin:"10px",context:this.getContext(),listeners:{beforecarddroppedsave:this._onBeforeCardSaved,load:this._onBoardLoad,cardupdated:this._publishContentUpdatedNoDashboardLayout,scope:this},columnConfig:{xtype:"rallycardboardcolumn",enableWipLimit:!0},cardConfig:{editable:!0,showIconMenus:!0,showAge:this.getSetting("showCardAge")?this.getSetting("cardAgeThreshold"):-1,showBlockedReason:!0},storeConfig:{context:this.getContext().getDataContext()}};return this.getSetting("showRows")&&Ext.merge(a,{rowConfig:{field:this.getSetting("rowsField"),sortDirection:"ASC"}}),a},_getFilters:function(){var a=[];this.getSetting("query")&&a.push(Rally.data.QueryFilter.fromQueryString(this.getSetting("query"))),this.getContext().getTimeboxScope()&&a.push(this.getContext().getTimeboxScope().getQueryFilter());var b=this.getSetting("Owners"),c=[];if(""!=b){_.each(b.split(","),function(a,b){"none"===a&&(a="");var d=Ext.create("Rally.data.wsapi.Filter",{property:"Owner.UserName",operator:"=",value:a});c.push(d)});var d=Rally.data.wsapi.Filter.or(c);a.push(d)}return console.log(a.toString()),a},_getColumnSetting:function(){var a=this.getSetting("columns");return a&&Ext.JSON.decode(a)},_print:function(){this.gridboard.getGridOrBoard().openPrintPage({title:"Kanban Board"})},_getDefaultTypes:function(){return[this.getSetting("modelType")]},_buildStandardReportConfig:function(a){var b=this.getContext().getDataContext();return{xtype:"rallystandardreport",padding:10,project:b.project,projectScopeUp:b.projectScopeUp,projectScopeDown:b.projectScopeDown,reportConfig:a}},_showReportDialog:function(a,b){var c=450,d=600;this.getEl().mask(),Ext.create("Rally.ui.dialog.Dialog",{title:a,autoShow:!0,draggable:!1,closable:!0,modal:!1,height:c,width:d,items:[Ext.apply(this._buildStandardReportConfig(b),{height:c,width:d})],listeners:{close:function(){this.getEl().unmask()},scope:this}})},_onBoardLoad:function(){this._publishContentUpdated(),this.setLoading(!1)},_onBeforeCreate:function(a,b,c){Ext.apply(c,{rankTo:"BOTTOM",rankScope:"BACKLOG"}),b.set(this.getSetting("groupByField"),this.gridboard.getGridOrBoard().getColumns()[0].getValue())},_onBeforeEditorShow:function(a,b){b.rankTo="BOTTOM",b.rankScope="BACKLOG",b.iteration="u";var c=this.groupByField.name;b[c]=this.gridboard.getGridOrBoard().getColumns()[0].getValue()},_onBeforeCardSaved:function(a,b,c){var d=this._getColumnSetting();if(d){var e=d[a.getValue()||""];e&&(e.portfolioStateMapping||""===e.portfolioStateMapping)&&b.getRecord().set("State",e.portfolioStateMapping)}},_publishContentUpdated:function(){this.fireEvent("contentupdated"),Rally.BrowserTest&&Rally.BrowserTest.publishComponentReady(this),this.recordComponentReady({miscData:{swimLanes:this.getSetting("showRows"),swimLaneField:this.getSetting("rowsField")}})},_publishContentUpdatedNoDashboardLayout:function(){this.fireEvent("contentupdated",{dashboardLayout:!1})},isExternal:function(){return"undefined"==typeof this.getAppId()},onSettingsUpdate:function(a){this.logger.log("onSettingsUpdate",a),Ext.apply(this,a),this.launch()}}),Ext.override(Ext.grid.plugin.CellEditing,{onEditComplete:function(a,b,c){var d,e=this,f=e.getActiveColumn(),g=e.context;if(f){if(d=g.record,g.editorRecord=e.activeEditor.field&&e.activeEditor.field.getRecord&&e.activeEditor.field.getRecord()&&e.activeEditor.field.getRecord().getData()||{value:null,name:"-- No Mapping --"},e.setActiveEditor(null),e.setActiveColumn(null),e.setActiveRecord(null),g.value=b,!e.validateEdit())return void(e.editing=!1);d.isEqual(b,c)||d.set(f.dataIndex,b),g.view.focusRow(g.rowIdx,100),e.fireEvent("edit",e,g),e.editing=!1}}}),Ext.define("RallyTechServices.portfolioalternatekanbanboard.Toolbox",{fetchObjectByRef:function(a){var b=a.split("/");Ext.create("Rally.data.wsapi.Store",{model:b[0],fetch:!0,filters:[{property:"ObjectID",value:b[1]}]}).load({callback:function(a,b){console.log("records",a)}})}});
            
               Rally.launchApp('TSPortfolioKanbanAlternateFieldApp', {
                   name: 'Portfolio Kanban Using Alternate Field'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.portfolio-kanban {
    overflow-y: hidden;
}

.portfolio-kanban .no-type-text {
    text-align: center;
}

.portfolio-kanban .typeCombo {
    float: right;
}

.portfolio-kanban .readyIndicator {
    visibility: hidden;
}

.portfolio-kanban .timeInState {
    border-top: 1px dotted #CCC;
    color: #666;
    margin-top: 5px;
    padding-top: 5px;
}

.portfolio-kanban .showPolicies {
    font-family: ProximaNovaSemiBold, Helvetica, Arial;
    font-weight: normal;
    float: right;
    margin: 1px 10px 6px 0;
}

.portfolio-kanban .showPolicies  label {
    position: relative;
    top: 1px;
    margin-top: 0;
    padding-left: 4px;
}

.portfolio-kanban .showPolicies .showPoliciesCheckbox {
    position: relative;
    margin-top: 0;
}

.portfolio-kanban .settingsHeader {
    float: left;
    color: gray;
    padding: 1px 0 0 10px;
}

.portfolio-kanban .settingsHeader b {
    padding-right: 5px;
}

.portfolio-kanban .help-field {
    float: right;
}

.portfolio-kanban .field-picker-btn {
    height: 22px;
    margin-top: 3px;
}

.rui-card .rui-card-content .status-content>.status-field{
  background-color: white;
  border: none;
}

.timeInState {
  border-top: 1px dotted #CCC;
  color: #666;
  margin-top: 5px;
  padding-top: 5px;
}

    </style>

</head>
<body></body>
</html>